name: Docker

on:
  pull_request:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BUILD_SCAN: 1

    steps:
    - uses: actions/checkout@v2

    - name: Build Docker image
      run: docker-compose build
      working-directory: reproducible-builds

    - name: Build APKs
      run: docker-compose run reproducible-molly
      working-directory: reproducible-builds

    - name: Log checksums
      run: find reproducible-builds/outputs/apk -name "*.apk" -exec sha256sum '{}' \;

    - name: Upload APKs
      uses: actions/upload-artifact@v2
      with:
        name: molly-apk-docker
        path: reproducible-builds/outputs/apk/**/release/*.apk
        if-no-files-found: error

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Get the version
        id: get-version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Molly Android ${{ steps.get-version.outputs.VERSION }}
          draft: true
          prerelease: ${{ contains(steps.get-version.outputs.VERSION, 'rc') }}

      - name: Upload APK staging
        if: contains(steps.get-version.outputs.VERSION, 'rc')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./molly-apk-docker/nonFreeStaging/release/Molly-staging-release-unsigned-${{ steps.get-version.outputs.VERSION }}.apk
          asset_name: Molly-staging-unsigned-${{ steps.get-version.outputs.VERSION }}.apk
          asset_content_type: application/zip

      - name: Upload APK production
        if: "!contains(steps.get-version.outputs.VERSION, 'rc')"
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./molly-apk-docker/nonFreeProduction/release/Molly-production-release-unsigned-${{ steps.get-version.outputs.VERSION }}.apk
          asset_name: Molly-production-unsigned-${{ steps.get-version.outputs.VERSION }}.apk
          asset_content_type: application/zip

      - name: Upload APK staging FOSS
        if: contains(steps.get-version.outputs.VERSION, 'rc')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./molly-apk-docker/freeStaging/release/Molly-staging-release-unsigned-${{ steps.get-version.outputs.VERSION }}-FOSS.apk
          asset_name: Molly-staging-unsigned-${{ steps.get-version.outputs.VERSION }}-FOSS.apk
          asset_content_type: application/zip

      - name: Upload APK production FOSS
        if: "!contains(steps.get-version.outputs.VERSION, 'rc')"
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./molly-apk-docker/freeProduction/release/Molly-production-release-unsigned-${{ steps.get-version.outputs.VERSION }}-FOSS.apk
          asset_name: Molly-production-unsigned-${{ steps.get-version.outputs.VERSION }}-FOSS.apk
          asset_content_type: application/zip
